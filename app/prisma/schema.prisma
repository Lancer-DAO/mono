generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

/// MODELS

model Bounty {
  id Int @id @default(autoincrement())

  // Fields
  createdAt     String   @db.VarChar(24)
  description   String   @db.VarChar(10000)
  estimatedTime Decimal? @db.Decimal(10, 2)
  price         Decimal? @db.Decimal(16, 9)
  isPrivate     Boolean
  isTest        Boolean  @default(false)
  state         String   @db.VarChar(24)
  title         String   @db.VarChar(256)
  type          String?  @db.VarChar(24)
  links         String   @default("") @db.VarChar(1024)

  // Relations
  certificates BountyCertificate[]
  comments     BountyComment[]
  escrow       Escrow              @relation(fields: [escrowid], references: [id])
  escrowid     Int                 @unique
  issue        Issue?
  milestone    Milestone?          @relation(fields: [milestoneid], references: [id])
  milestoneid  Int?
  project      Project?            @relation(fields: [projectid], references: [id])
  projectid    Int?
  guild        Guild?              @relation(fields: [guildid], references: [id])
  guildid      Int?
  pullRequests PullRequest[]
  repository   Repository?         @relation(fields: [repositoryid], references: [id])
  repositoryid Int?
  tags         Tag[]
  users        BountyUser[]
  industries   Industry[]
  disciplines  Discipline[]
  media        Media[]
  updates      Update[]

  @@index([milestoneid])
  @@index([projectid])
  @@index([guildid])
  @@index([repositoryid])
}

model Certificate {
  id Int @id @default(autoincrement())

  // Fields
  name String? @db.VarChar(256)

  // Relations
  bounties BountyCertificate[]
  guilds   CertificateGuild[]
  tags     Tag[]
  users    CertificateUser[]
}

model Chain {
  id Int @id @default(autoincrement())

  // Fields
  name    String @db.VarChar(24)
  network String @db.VarChar(24)

  // Relations
  wallets      ChainWallet[]
  escrows      Escrow[]
  transactions Transaction[]
}

model Comment {
  id Int @id @default(autoincrement())

  // Fields
  content   String? @db.VarChar(2000)
  createdAt String? @db.VarChar(24)

  // Relations
  bounty BountyComment[]
}

model Discipline {
  id Int @id @default(autoincrement())

  // Fields
  name        String @unique @db.VarChar(256)
  color       String @db.VarChar(32)
  description String @db.VarChar(4096)
  industryid  Int

  // Relations
  industry Industry @relation(fields: [industryid], references: [id])
  bounties Bounty[]
  tags     Tag[]

  @@index([industryid])
}

model Endorsement {
  id Int @id @default(autoincrement())

  // Fields
  timestamp String? @db.VarChar(24)

  // Relations
  skill       Skill? @relation(fields: [skillid], references: [id])
  skillid     Int?
  endoreser   User?  @relation(fields: [endorserid], references: [id], name: "endorser")
  endorserid  Int?
  endoresee   User?  @relation(fields: [endoreseeid], references: [id], name: "endorsee")
  endoreseeid Int?

  @@index([skillid])
  @@index([endorserid])
  @@index([endoreseeid])
}

model Escrow {
  id Int @id @default(autoincrement())

  // Fields
  amount    Decimal? @db.Decimal(20, 10)
  publicKey String?  @db.VarChar(100)
  timestamp String?  @db.VarChar(24)

  // Relations
  bounty       Bounty?
  chainid      Int
  chain        Chain         @relation(fields: [chainid], references: [id])
  milestone    Milestone?
  project      Project?
  transactions Transaction[]
  users        EscrowUser[]
  milestoneid  Int?
  mintid       Int
  mint         Mint          @relation(fields: [mintid], references: [id])

  @@index([chainid])
  @@index([mintid])
}

model Guild {
  id Int @id @default(autoincrement())

  // Fields
  name    String? @db.VarChar(128)
  logo    String? @db.VarChar(2000)
  website String? @db.VarChar(128)

  // Relations
  bounties     Bounty[]
  projects     Project[]
  repositories Repository[]
  certificates CertificateGuild[]
  users        GuildUser[]
}

model Industry {
  id Int @id @default(autoincrement())

  // Fields
  name        String @unique @db.VarChar(256)
  icon        String @db.VarChar(256)
  color       String @db.VarChar(32)
  description String @db.VarChar(4096)

  // Relations
  bounties    Bounty[]
  users       User[]
  disciplines Discipline[]
  tags        Tag[]
}

model Issue {
  id Int @id @default(autoincrement())

  // Fields
  title         String  @db.VarChar(256)
  number        Decimal @db.Decimal(10, 0)
  description   String  @db.VarChar(2000)
  state         String  @db.VarChar(24)
  githubLink    String  @db.VarChar(256)
  linkingMethod String  @db.VarChar(24)

  // Relations
  bounty       Bounty        @relation(fields: [bountyid], references: [id])
  bountyid     Int           @unique
  repository   Repository    @relation(fields: [repositoryid], references: [id])
  repositoryid Int
  pullRequests PullRequest[]

  @@unique([number, repositoryid])
  @@index([repositoryid])
}

model Media {
  id Int @id @default(autoincrement())

  // Fields
  imageUrl    String? @db.VarChar(256)
  title       String? @db.VarChar(128)
  description String? @db.VarChar(512)

  // Relations
  bounty Bounty[]
  update Update[]
  user   User[]
}

model Milestone {
  id Int @id @default(autoincrement())

  // Fields
  name        String? @db.VarChar(128)
  dueDate     String? @db.VarChar(36)
  description String? @db.VarChar(2000)

  // Relations
  bounties Bounty[]

  escrow    Escrow?         @relation(fields: [escrowid], references: [id])
  escrowid  Int             @unique
  project   Project         @relation(fields: [projectid], references: [id])
  projectid Int
  tags      Tag[]
  users     MilestoneUser[]

  @@index([projectid])
}

model Mint {
  id Int @id @default(autoincrement())

  // Fields
  name          String  @unique @db.VarChar(128)
  ticker        String  @unique @db.VarChar(128)
  logo          String  @db.VarChar(2000)
  publicKey     String? @db.VarChar(100)
  website       String? @db.VarChar(128)
  decimals      Int
  defaultOffset Int

  // Relations
  escrows Escrow[]
}

model Project {
  id Int @id @default(autoincrement())

  // Fields
  description String? @db.VarChar(2000)

  // Relations
  bounties     Bounty[]
  escrow       Escrow?       @relation(fields: [escrowid], references: [id])
  escrowid     Int?          @unique
  milestones   Milestone[]
  guild        Guild         @relation(fields: [guildid], references: [id])
  guildid      Int
  repository   Repository    @relation(fields: [repositoryid], references: [id])
  repositoryid Int
  users        ProjectUser[]

  @@index([guildid])
  @@index([repositoryid])
}

model Provider {
  id Int @id @default(autoincrement())

  // Fields
  name String @unique @db.VarChar(128)

  // Relations
  wallets Wallet[]
}

model PullRequest {
  id Int @id @default(autoincrement())

  // Fields
  title       String? @db.VarChar(256)
  number      Decimal @db.Decimal(10, 0)
  description String? @db.VarChar(2000)
  state       String  @db.VarChar(24)
  githubLink  String  @db.VarChar(256)

  // Relations
  bounty       Bounty     @relation(fields: [bountyid], references: [id])
  bountyid     Int
  repository   Repository @relation(fields: [repositoryid], references: [id])
  repositoryid Int
  issue        Issue?     @relation(fields: [issueid], references: [id])
  issueid      Int?
  users        User[]

  @@unique([repositoryid, number])
  @@index([issueid])
  @@index([repositoryid])
  @@index([bountyid])
}

model Repository {
  id Int @id @default(autoincrement())

  // Fields
  githubLink   String  @unique @db.VarChar(255)
  name         String  @db.VarChar(128)
  organization String  @db.VarChar(128)
  isPrivate    Boolean

  // Relations
  bounties     Bounty[]
  issues       Issue[]
  projects     Project[]
  pullRequests PullRequest[]
  Guild        Guild?        @relation(fields: [guildid], references: [id])
  guildid      Int?

  @@unique([organization, name])
  @@index([guildid])
}

model Skill {
  id Int @id @default(autoincrement())

  // Fields
  name String @unique @db.VarChar(128)

  // Relations
  endorsements Endorsement[]
}

model Tag {
  id Int @id @default(autoincrement())

  // Fields
  bgColor     String? @db.VarChar(24)
  borderColor String? @db.VarChar(24)
  description String? @db.VarChar(255)
  name        String? @db.VarChar(64)

  // Relations
  bounties     Bounty[]
  certificates Certificate[]
  milestones   Milestone[]
  users        User[]
  disciplines  Discipline[]
  industries   Industry[]

  // full text search name
  @@fulltext([name])
}

model Transaction {
  id Int @id @default(autoincrement())

  // Fields
  signature String @db.VarChar(100)
  timestamp String @db.VarChar(24)
  label     String @db.VarChar(24)

  // Relations
  chainid  Int
  chain    Chain               @relation(fields: [chainid], references: [id])
  escrowid Int
  escrow   Escrow              @relation(fields: [escrowid], references: [id])
  wallets  TransactionWallet[]

  @@index([chainid])
  @@index([escrowid])
}

model Update {
  id Int @id @default(autoincrement())

  // Fields
  name        String @db.VarChar(128)
  type        String @db.VarChar(24)
  description String @db.VarChar(5000)
  links       String @db.VarChar(256)

  // Relations
  media  Media[]
  bounty Bounty[]
}

model User {
  id Int @id @default(autoincrement())

  // Fields
  isAdmin               Boolean?
  isLancerDev           Boolean?
  verified              Boolean?
  hasProfileNFT         Boolean?
  googleId              String?  @db.VarChar(64)
  githubId              String?  @db.VarChar(24)
  githubLogin           String?  @db.VarChar(64)
  picture               String?  @db.VarChar(2000)
  name                  String?  @db.VarChar(128)
  bio                   String?  @db.VarChar(2000)
  discord               String?  @db.VarChar(64)
  twitter               String?  @db.VarChar(64)
  instagram             String?  @db.VarChar(64)
  linkedin              String?  @db.VarChar(64)
  github                String?  @db.VarChar(64)
  website               String?  @db.VarChar(128)
  email                 String?  @unique @db.VarChar(128)
  resume                String?  @db.VarChar(256)
  profileWalletId       Int?     @unique
  refferralTreasuryKey  String?  @unique @db.VarChar(128)
  referralId            String?  @unique @db.VarChar(128)
  createdAt             String   @default("") @db.VarChar(24)
  company               String?  @db.VarChar(128)
  position              String?  @db.VarChar(128)
  hasFinishedOnboarding Boolean? @default(false)
  hasCompletedProfile   Boolean? @default(false)
  hasBeenApproved       Boolean? @default(false)
  class                 String   @default("lancer") @db.VarChar(24)
  experience            Int?     @default(0)
  companyDescription    String?  @db.VarChar(2000)

  // Relations
  wallets      Wallet[]
  bounties     BountyUser[]
  certificates CertificateUser[]
  escrows      EscrowUser[]
  milestones   MilestoneUser[]
  projects     ProjectUser[]
  guilds       GuildUser[]
  tags         Tag[]
  pullRequests PullRequest[]
  endorsees    Endorsement[]      @relation("endorsee")
  endorsers    Endorsement[]      @relation("endorser")
  referrers    ReferrerReferree[] @relation("referree")
  referrees    ReferrerReferree[] @relation("referrer")
  industries   Industry[]
  media        Media[]
}

model Wallet {
  id Int @id @default(autoincrement())

  publicKey          String?  @unique @db.VarChar(64)
  isDefault          Boolean?
  hasProfileNFT      Boolean?
  hasBeenInitialized Boolean?

  userid Int
  user   User @relation(fields: [userid], references: [id])

  providers    Provider[]
  transactions TransactionWallet[]
  chains       ChainWallet[]
  reffering    ReferrerReferree[]  @relation("wallet")
  bountyUsers  BountyUser[]

  @@index([userid])
}

/// RELATIONS

model BountyUserAction {
  bountyid   Int
  userid     Int
  bountyUser BountyUser @relation(fields: [bountyid, userid], references: [bountyid, userid])
  timestamp  String     @db.VarChar(24)
  type       String     @db.VarChar(24)

  @@id([timestamp, bountyid, userid])
  @@index([bountyid, userid])
}

model BountyCertificate {
  certificateid Int
  bountyid      Int
  relations     String      @db.VarChar(256)
  certificate   Certificate @relation(fields: [certificateid], references: [id])
  bounty        Bounty      @relation(fields: [bountyid], references: [id])

  @@id([certificateid, bountyid])
  @@index([bountyid])
  @@index([certificateid])
}

model BountyComment {
  commentid Int
  bountyid  Int
  relations String  @db.VarChar(256)
  comment   Comment @relation(fields: [commentid], references: [id])
  bounty    Bounty  @relation(fields: [bountyid], references: [id])

  @@id([commentid, bountyid])
  @@index([bountyid])
  @@index([commentid])
}

model BountyUser {
  userid   Int
  bountyid Int
  walletid Int?
  user     User    @relation(fields: [userid], references: [id])
  bounty   Bounty  @relation(fields: [bountyid], references: [id])
  wallet   Wallet? @relation(fields: [walletid], references: [id])

  // Fields
  relations       String  @db.VarChar(256)
  applicationText String? @db.VarChar(2000)

  // Relations
  actions BountyUserAction[]

  @@id([userid, bountyid])
  @@index([bountyid])
  @@index([userid])
  @@index([walletid])
}

model CertificateGuild {
  certificateid Int
  guildid       Int
  relations     String      @db.VarChar(256)
  certificiate  Certificate @relation(fields: [certificateid], references: [id])
  guild         Guild       @relation(fields: [guildid], references: [id])

  @@id([certificateid, guildid])
  @@index([guildid])
  @@index([certificateid])
}

model CertificateUser {
  userid           Int
  certificateid    Int
  relations        String      @db.VarChar(256)
  onChainPublicKey String      @default("") @db.VarChar(256)
  user             User        @relation(fields: [userid], references: [id])
  certificate      Certificate @relation(fields: [certificateid], references: [id])

  @@id([userid, certificateid])
  @@index([certificateid])
  @@index([userid])
}

model ChainWallet {
  walletid  Int
  chainid   Int
  relations String @db.VarChar(256)
  wallet    Wallet @relation(fields: [walletid], references: [id])
  chain     Chain  @relation(fields: [chainid], references: [id])

  @@id([walletid, chainid])
  @@index([chainid])
  @@index([walletid])
}

model EscrowUser {
  userid    Int
  escrowid  Int
  relations String @db.VarChar(256)
  user      User   @relation(fields: [userid], references: [id])
  escrow    Escrow @relation(fields: [escrowid], references: [id])

  @@id([userid, escrowid])
  @@index([escrowid])
  @@index([userid])
}

model MilestoneUser {
  userid      Int
  milestoneid Int
  relations   String    @db.VarChar(256)
  user        User      @relation(fields: [userid], references: [id])
  milestone   Milestone @relation(fields: [milestoneid], references: [id])

  @@id([userid, milestoneid])
  @@index([milestoneid])
  @@index([userid])
}

model ProjectUser {
  userid    Int
  projectid Int
  relations String  @db.VarChar(256)
  user      User    @relation(fields: [userid], references: [id])
  project   Project @relation(fields: [projectid], references: [id])

  @@id([userid, projectid])
  @@index([projectid])
  @@index([userid])
}

model GuildUser {
  userid    Int
  guildid   Int
  relations String @db.VarChar(256)
  user      User   @relation(fields: [userid], references: [id])
  guild     Guild  @relation(fields: [guildid], references: [id])

  @@id([userid, guildid])
  @@index([guildid])
  @@index([userid])
}

model TransactionWallet {
  walletid      Int
  transactionid Int
  relations     String      @db.VarChar(256)
  wallet        Wallet      @relation(fields: [walletid], references: [id])
  transaction   Transaction @relation(fields: [transactionid], references: [id])

  @@id([walletid, transactionid])
  @@index([transactionid])
  @@index([walletid])
}

model ReferrerReferree {
  referrerid Int
  referreeid Int
  walletid   Int
  relations  String @db.VarChar(256)
  referrer   User   @relation("referrer", fields: [referrerid], references: [id])
  referree   User   @relation("referree", fields: [referreeid], references: [id])
  wallet     Wallet @relation("wallet", fields: [walletid], references: [id])

  @@id([referrerid, referreeid])
  @@index([walletid])
  @@index([referreeid])
  @@index([referrerid])
}
