generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

/// MODELS

model Bounty {
  id Int @id @default(autoincrement())

  // Fields
  createdAt     String   @db.VarChar(24)
  description   String   @db.VarChar(10000)
  estimatedTime Decimal? @db.Decimal(10, 2)
  price         Decimal? @db.Decimal(16, 9)
  isPrivate     Boolean
  isTest        Boolean  @default(false)
  state         String   @db.VarChar(24)
  title         String   @db.VarChar(256)
  type          String?  @db.VarChar(24)
  links         String   @default("") @db.VarChar(1024)

  // Relations
  escrow     Escrow        @relation(fields: [escrowid], references: [id])
  escrowid   Int           @unique
  tags       Tag[]
  users      BountyUser[]
  industries Industry[]
  media      Media[]
  updates    QuestUpdate[]
  quotes     Quote[]
}

model Checkpoint {
  id Int @id @default(autoincrement())

  title         String   @db.VarChar(256)
  price         Decimal? @db.Decimal(16, 9)
  description   String   @db.VarChar(10000)
  estimatedTime Decimal? @db.Decimal(10, 2)
  order         Int

  // Relations
  quote Quote[]

  // quote   Quote @relation(fields: [quoteid], references: [id])
  // quoteid Int

  // @@index([quoteid])
}

model Escrow {
  id Int @id @default(autoincrement())

  // Fields
  amount    Decimal? @db.Decimal(20, 10)
  publicKey String?  @db.VarChar(100)
  timestamp String?  @db.VarChar(24)
  achState  String?  @db.VarChar(24)
  paymentId String?  @db.VarChar(100)

  // Relations
  bounty       Bounty?
  transactions Transaction[]
  users        EscrowUser[]
  mintid       Int
  mint         Mint          @relation(fields: [mintid], references: [id])

  @@index([mintid])
}

model Industry {
  id Int @id @default(autoincrement())

  // Fields
  name        String @unique @db.VarChar(256)
  icon        String @db.VarChar(256)
  color       String @db.VarChar(32)
  description String @db.VarChar(4096)

  // Relations
  bounties Bounty[]
  users    User[]
  tags     Tag[]
}

model Media {
  id Int @id @default(autoincrement())

  // Fields
  imageUrl    String? @db.VarChar(256)
  title       String? @db.VarChar(128)
  description String? @db.VarChar(512)

  // Relations
  bounty  Bounty[]
  updates QuestUpdate[]
  user    User[]
}

model Mint {
  id Int @id @default(autoincrement())

  // Fields
  name          String  @unique @db.VarChar(128)
  ticker        String  @unique @db.VarChar(128)
  logo          String  @db.VarChar(2000)
  publicKey     String? @db.VarChar(100)
  website       String? @db.VarChar(128)
  decimals      Int
  defaultOffset Int

  // Relations
  escrows Escrow[]
}

model Quote {
  id Int @id @default(autoincrement())

  // Fields
  title         String   @db.VarChar(256)
  description   String   @db.VarChar(10000)
  estimatedTime Decimal? @db.Decimal(10, 2)
  price         Decimal? @db.Decimal(16, 9)
  createdAt     String   @db.VarChar(24)
  state         String   @db.VarChar(8)
  reviewedAt    String?  @db.VarChar(24)

  // Relations
  checkpoints Checkpoint[]
  bounty      Bounty       @relation(fields: [bountyid], references: [id])
  bountyid    Int
  user        User         @relation(fields: [userid], references: [id])
  userid      Int

  @@index([bountyid])
  @@index([userid])
}

model Tag {
  id Int @id @default(autoincrement())

  // Fields
  bgColor     String? @db.VarChar(24)
  borderColor String? @db.VarChar(24)
  description String? @db.VarChar(255)
  name        String? @db.VarChar(64)

  // Relations
  bounties   Bounty[]
  users      User[]
  industries Industry[]

  // full text search name
  @@fulltext([name])
}

model Transaction {
  id Int @id @default(autoincrement())

  // Fields
  signature String @db.VarChar(100)
  timestamp String @db.VarChar(24)
  label     String @db.VarChar(24)

  // Relations
  escrowid Int
  escrow   Escrow              @relation(fields: [escrowid], references: [id])
  wallets  TransactionWallet[]

  @@index([escrowid])
}

model QuestUpdate {
  id Int @id @default(autoincrement())

  // Fields
  name        String  @db.VarChar(128)
  type        String  @db.VarChar(24)
  description String  @db.VarChar(5000)
  links       String? @db.VarChar(256)
  createdAt   String  @db.VarChar(24)
  state       String  @db.VarChar(8)
  reviewedAt  String? @db.VarChar(24)
  review      String? @db.VarChar(5000)

  // Relations
  media    Media[]
  bounty   Bounty  @relation(fields: [bountyid], references: [id])
  bountyid Int
  user     User    @relation(fields: [userid], references: [id])
  userid   Int

  @@index([bountyid])
  @@index([userid])
}

model User {
  id Int @id @default(autoincrement())

  // Fields
  isAdmin               Boolean?
  isLancerDev           Boolean?
  verified              Boolean?
  hasProfileNFT         Boolean?
  googleId              String?  @db.VarChar(64)
  githubId              String?  @db.VarChar(24)
  githubLogin           String?  @db.VarChar(64)
  picture               String?  @db.VarChar(2000)
  name                  String?  @db.VarChar(128)
  bio                   String?  @db.VarChar(2000)
  discord               String?  @db.VarChar(64)
  twitter               String?  @db.VarChar(64)
  instagram             String?  @db.VarChar(64)
  linkedin              String?  @db.VarChar(64)
  github                String?  @db.VarChar(64)
  website               String?  @db.VarChar(128)
  email                 String?  @unique @db.VarChar(128)
  resume                String?  @db.VarChar(256)
  profileWalletId       Int?     @unique
  refferralTreasuryKey  String?  @unique @db.VarChar(128)
  referralId            String?  @unique @db.VarChar(128)
  createdAt             String   @default("") @db.VarChar(24)
  company               String?  @db.VarChar(128)
  position              String?  @db.VarChar(128)
  hasFinishedOnboarding Boolean? @default(false)
  hasCompletedProfile   Boolean? @default(false)
  hasBeenApproved       Boolean? @default(false)
  experience            Int?     @default(0)

  // Relations
  wallets    Wallet[]
  bounties   BountyUser[]
  escrows    EscrowUser[]
  tags       Tag[]
  referrers  ReferrerReferree[] @relation("referree")
  referrees  ReferrerReferree[] @relation("referrer")
  industries Industry[]
  media      Media[]
  updates    QuestUpdate[]
  quotes     Quote[]
}

model Wallet {
  id Int @id @default(autoincrement())

  publicKey          String?  @unique @db.VarChar(64)
  isDefault          Boolean?
  hasProfileNFT      Boolean?
  hasBeenInitialized Boolean?

  userid Int
  user   User @relation(fields: [userid], references: [id])

  transactions TransactionWallet[]
  reffering    ReferrerReferree[]  @relation("wallet")
  bountyUsers  BountyUser[]

  @@index([userid])
}

/// RELATIONS

model BountyUserAction {
  bountyid   Int
  userid     Int
  bountyUser BountyUser @relation(fields: [bountyid, userid], references: [bountyid, userid])
  timestamp  String     @db.VarChar(24)
  type       String     @db.VarChar(24)

  @@id([timestamp, bountyid, userid])
  @@index([bountyid, userid])
}

model BountyUser {
  userid   Int
  bountyid Int
  walletid Int?
  user     User    @relation(fields: [userid], references: [id])
  bounty   Bounty  @relation(fields: [bountyid], references: [id])
  wallet   Wallet? @relation(fields: [walletid], references: [id])

  // Fields
  relations       String  @db.VarChar(256)
  applicationText String? @db.VarChar(2000)

  // Relations
  actions BountyUserAction[]

  @@id([userid, bountyid])
  @@index([bountyid])
  @@index([userid])
  @@index([walletid])
}

model EscrowUser {
  userid    Int
  escrowid  Int
  relations String @db.VarChar(256)
  user      User   @relation(fields: [userid], references: [id])
  escrow    Escrow @relation(fields: [escrowid], references: [id])

  @@id([userid, escrowid])
  @@index([escrowid])
  @@index([userid])
}

model TransactionWallet {
  walletid      Int
  transactionid Int
  relations     String      @db.VarChar(256)
  wallet        Wallet      @relation(fields: [walletid], references: [id])
  transaction   Transaction @relation(fields: [transactionid], references: [id])

  @@id([walletid, transactionid])
  @@index([transactionid])
  @@index([walletid])
}

model ReferrerReferree {
  referrerid Int
  referreeid Int
  walletid   Int
  relations  String @db.VarChar(256)
  referrer   User   @relation("referrer", fields: [referrerid], references: [id])
  referree   User   @relation("referree", fields: [referreeid], references: [id])
  wallet     Wallet @relation("wallet", fields: [walletid], references: [id])

  @@id([referrerid, referreeid])
  @@index([walletid])
  @@index([referreeid])
  @@index([referrerid])
}
